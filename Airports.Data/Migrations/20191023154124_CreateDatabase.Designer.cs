// <auto-generated />
using System;
using Airports.Data.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Airports.Data.Migrations
{
    [DbContext(typeof(AirportsContext))]
    [Migration("20191023154124_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airports.Data.DO.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Airport_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Continent");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateModified")
                        .HasColumnName("Date_Modified");

                    b.Property<string>("Iata")
                        .HasColumnName("IATA");

                    b.Property<string>("Iso")
                        .HasColumnName("ISO");

                    b.Property<double>("Lat")
                        .HasColumnName("LAT");

                    b.Property<double>("Lon")
                        .HasColumnName("LON");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("Modified_By");

                    b.Property<string>("Name");

                    b.Property<string>("Size");

                    b.Property<int>("Status");

                    b.Property<string>("Type");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");
                });
#pragma warning restore 612, 618
        }
    }
}
